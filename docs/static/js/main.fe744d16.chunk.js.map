{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yKAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACI,qCACI,8CACA,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAK,GAAC,OAAKH,GAAL,mBAAmBG,OACnCF,EAAc,MAOd,SACI,uBACIM,KAAO,OAAOC,MAASR,EACvBS,SAAa,SAACN,GAAD,OAAMF,EAAcE,EAAEO,OAAOF,gB,+BCrBjDG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,uDACJ,mCADI,cAEqDC,UAAUH,GAF/D,sBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATxB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAY,6CAAjB,UACI,qBAAKC,IAAOf,EAAKgB,IAAMN,IACvB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAc,IAAD,EACbb,mBACtB,CACIoB,KAAM,GACNa,SAAS,IAJsB,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OATAC,qBAAU,WACNxB,EAASC,GACRwB,MAAM,SAAAC,GAAI,OACPH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAEjB,CAACpB,IAEGqB,EDdyBK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAGrB,OACI,qCACA,mCAAMpB,EAAN,OACCoB,GAAW,qBAAKH,IALF,8EAMf,qBAAKD,UAAY,YAAjB,SAEQH,EAAOJ,KAAK,SAACC,GACP,OACE,cAAC,EAAD,eAESA,GADEA,EAAIC,aEIxBgB,EAlBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,kBAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAIvB,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BACK0C,EAAWnB,KAAK,SAACT,GACd,OAAO,cAAC,EAAD,CAA0BA,SAAYA,GAAtBA,Y,MCT3C6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fe744d16.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( e => [inputValue,...e]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Search a Gif</h2> \r\n            <form onSubmit = {handleSubmit}>\r\n                <input \r\n                    type = \"text\" value = {inputValue}\r\n                    onChange = { (e)=> setInputValue(e.target.value)}\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async( category) => {\r\n    const apiKey = '95lsvsG9eRYe15N73EtY429saHnUo806';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log(gifs);\r\n    // setImages(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log(id,title,url);\r\n    return (\r\n        <div className = 'card animate__animated animate__fadeInLeft'>\r\n            <img src = {url} alt= {title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data: images, loading} = useFetchGifs(category);\r\n    const loadingUrl = 'https://tradinglatam.com/wp-content/uploads/2019/04/loading-gif-png-4.gif';\r\n\r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n        {loading && <img src = {loadingUrl}></img>}\r\n        <div className = 'card-grid'>\r\n            { \r\n                images.map ((img)=> \r\n                    { return (\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            { ...img }\r\n                        />\r\n                    )\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n    const [state, setstate] = useState(\r\n        {\r\n            data: [],\r\n            loading: true,\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then( imgs => \r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            }));\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React , {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Dragon Ball Z\"]);\r\n\r\n    return (\r\n        <>\r\n            <h1>Giphy Search App</h1>\r\n            <AddCategory setCategories = {setCategories} /> \r\n            <hr/> \r\n            <ol>\r\n                {categories.map( (category) => {\r\n                    return <GifGrid key = {category} category = {category}/>\r\n                })}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}